From e1ad396c9ded497a62f33aef07439790e0cf6623 Mon Sep 17 00:00:00 2001
From: Krzesimir Nowak <krzesimir@kinvolk.io>
Date: Wed, 18 Jan 2017 10:39:55 +0100
Subject: [PATCH] Do not try to write json files in the read-only directory

Put them in the XDG_CONFIG_HOME directory instead.
---
 server/commands/start.ts | 8 +++++---
 server/loadSystems.ts    | 4 +++-
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/server/commands/start.ts b/server/commands/start.ts
index 82ebcd0..b9f51dc 100644
--- a/server/commands/start.ts
+++ b/server/commands/start.ts
@@ -55,7 +55,7 @@ export default function start(serverDataPath: string) {
 
   const { version, superpowers: { appApiVersion: appApiVersion } } = JSON.parse(fs.readFileSync(`${__dirname}/../../package.json`, { encoding: "utf8" }));
   SupCore.log(`Server v${version} starting...`);
-  fs.writeFileSync(`${__dirname}/../../public/superpowers.json`, JSON.stringify({
+  fs.writeFileSync(`${dataPath}/superpowers.json`, JSON.stringify({
     serverName: config.server.serverName,
     version, appApiVersion,
     hasPassword: config.server.password.length !== 0
@@ -77,7 +77,7 @@ export default function start(serverDataPath: string) {
   memoryStore = new expressSession.MemoryStore();
 
   try {
-    const sessionsJSON = fs.readFileSync(`${__dirname}/../../sessions.json`, { encoding: "utf8" });
+    const sessionsJSON = fs.readFileSync(`${dataPath}/sessions.json`, { encoding: "utf8" });
     (memoryStore as any).sessions = JSON.parse(sessionsJSON);
   } catch (err) {
     // Ignore
@@ -112,6 +112,7 @@ export default function start(serverDataPath: string) {
   mainApp.get("/serverBuild", enforceAuth, serveServerBuildIndex);
 
   mainApp.use("/projects/:projectId/*", serveProjectWildcard);
+  mainApp.use("/superpowers.json", express.static(`${dataPath}/superpowers.json`));
   mainApp.use("/", express.static(`${__dirname}/../../public`));
 
   mainHttpServer = http.createServer(mainApp);
@@ -131,6 +132,7 @@ export default function start(serverDataPath: string) {
   buildApp.get("/", redirectToHub);
   buildApp.get("/systems/:systemId/SupCore.js", serveSystemSupCore);
 
+  buildApp.use("/superpowers.json", express.static(`${dataPath}/superpowers.json`));
   buildApp.use("/", express.static(`${__dirname}/../../public`));
 
   buildApp.use((req, res, next) => {
@@ -323,7 +325,7 @@ function onExit() {
     SupCore.log("Saving sessions...");
     try {
       const sessionsJSON = JSON.stringify((memoryStore as any).sessions, null, 2);
-      fs.writeFileSync(`${__dirname}/../../sessions.json`, sessionsJSON);
+      fs.writeFileSync(`${dataPath}/sessions.json`, sessionsJSON);
     } catch (err) {
       SupCore.log(`Failed to save sessions:\n${(err as any).stack}`);
       hadError = true;
diff --git a/server/loadSystems.ts b/server/loadSystems.ts
index 35c61dc..382c787 100644
--- a/server/loadSystems.ts
+++ b/server/loadSystems.ts
@@ -42,7 +42,9 @@ export default function(mainApp: express.Express, buildApp: express.Express, cal
     cb();
   }, () => {
     const systemsInfo: SupCore.SystemsInfo = { list: Object.keys(SupCore.systems) };
-    fs.writeFileSync(`${__dirname}/../public/systems.json`, JSON.stringify(systemsInfo, null, 2));
+    fs.writeFileSync(`${SupCore.systemsPath}/systems.json`, JSON.stringify(systemsInfo, null, 2));
+    mainApp.use("/systems.json", express.static(`${SupCore.systemsPath}/systems.json`));
+    buildApp.use("/systems.json", express.static(`${SupCore.systemsPath}/systems.json`));
 
     SupCore.system = null;
     callback();
-- 
2.9.3

